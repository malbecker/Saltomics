tadacc$eggsal = as.factor(tadacc$eggsal)
tadacc$target_sal = as.factor(tadacc$target_sal)
tadacc$prop.surv = (tadacc$survive/50) # Divides number in cup by starting density of 50 tads
tadacc6 = filter(tadacc, day == "6")
tadacc6$weight = rep(50, nrow(tadacc6))
c1 = glmer(prop.surv ~ eggsal * loc * target_sal + (1|pop), # Changed optimizer to improve model convergence
data=tadacc6, family = binomial(), weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
# Plot (Figure 2b)
tadacc6$predicted = plogis(predict(c1))
tadacc6$eggloc = paste(tadacc6$eggsal,tadacc6$loc, sep="_")
tadacc6$eggpop = paste(tadacc6$eggsal,tadacc6$pop, sep="_")
ggplot(tadacc6,aes(x=factor(target_sal), y=prop.surv, group= factor(eggloc)))+
xlab("Target Salinity of Tadpole Environment (ppt)") +
ylab("Proportion Survived") +
geom_smooth(aes(y = predicted, colour = loc, linetype = eggloc), se = FALSE)+
geom_jitter(aes(shape = eggpop,colour=loc, size = 2),width = 0.25)+
#stat_summary(position = position_dodge(0.35),size=1.5)+
scale_fill_manual(values = col.loc) +
scale_colour_manual(values = col.loc) +
scale_shape_manual(values = eggpop_shape) +
scale_linetype_manual(values = line_type)+
theme_hc(base_size = 24, base_family = "Times")+
theme(axis.line = element_line(colour = "black"))+
theme(axis.text= element_text(colour = "black"))+
theme(legend.position="none")
ggplot(hatch,aes(x=Egg_env, y=prop.hatch, group= factor(eggloc)))+
xlab("Salinity of Embryonic Environment (ppt)") +
ylab("Proportion Embryos Hatched") +
geom_boxplot(aes(fill=Loc),alpha = 0.4)+
geom_jitter(aes(shape = Loc, fill = Loc),size = 4,  width = 0.35)+
scale_fill_manual(values = col.loc) +
scale_colour_manual(values = col.loc) +
scale_shape_manual(values = loc_shapes) +
theme_hc(base_size = 24, base_family = "Times")+
theme(axis.line = element_line(colour = "black"))+
theme(axis.text= element_text(colour = "black"))+
theme(legend.position="none")
ggplot(tadacc6,aes(x=factor(target_sal), y=prop.surv, group= factor(eggloc)))+
xlab("Target Salinity of Tadpole Environment (ppt)") +
ylab("Proportion Survived") +
geom_boxplot(aes(fill=Loc),alpha = 0.4)+
#geom_jitter(aes(shape = Loc, fill = Loc),size = 4,  width = 0.35)+
#geom_smooth(aes(y = predicted, colour = loc, linetype = eggloc), se = FALSE)+
geom_jitter(aes(shape = eggpop,colour=loc, size = 2),width = 0.25)+
#stat_summary(position = position_dodge(0.35),size=1.5)+
scale_fill_manual(values = col.loc) +
scale_colour_manual(values = col.loc) +
scale_shape_manual(values = eggpop_shape) +
scale_linetype_manual(values = line_type)+
theme_hc(base_size = 24, base_family = "Times")+
theme(axis.line = element_line(colour = "black"))+
theme(axis.text= element_text(colour = "black"))+
theme(legend.position="none")
ggplot(tadacc6,aes(x=factor(target_sal), y=prop.surv, group= factor(eggloc)))+
xlab("Target Salinity of Tadpole Environment (ppt)") +
ylab("Proportion Survived") +
geom_boxplot(aes(fill=loc),alpha = 0.4)+
#geom_jitter(aes(shape = Loc, fill = Loc),size = 4,  width = 0.35)+
#geom_smooth(aes(y = predicted, colour = loc, linetype = eggloc), se = FALSE)+
geom_jitter(aes(shape = eggpop,colour=loc, size = 2),width = 0.25)+
#stat_summary(position = position_dodge(0.35),size=1.5)+
scale_fill_manual(values = col.loc) +
scale_colour_manual(values = col.loc) +
scale_shape_manual(values = eggpop_shape) +
scale_linetype_manual(values = line_type)+
theme_hc(base_size = 24, base_family = "Times")+
theme(axis.line = element_line(colour = "black"))+
theme(axis.text= element_text(colour = "black"))+
theme(legend.position="none")
ggplot(tadacc6,aes(x=factor(target_sal), y=prop.surv, group= factor(eggloc)))+
xlab("Target Salinity of Tadpole Environment (ppt)") +
ylab("Proportion Survived") +
geom_smooth(aes(y = predicted, colour = loc, linetype = eggloc), se = FALSE)+
geom_jitter(aes(shape = eggpop,colour=loc, size = 2),width = 0.25)+
#stat_summary(position = position_dodge(0.35),size=1.5)+
scale_fill_manual(values = col.loc) +
scale_colour_manual(values = col.loc) +
scale_shape_manual(values = eggpop_shape) +
scale_linetype_manual(values = line_type)+
theme_hc(base_size = 24, base_family = "Times")+
theme(axis.line = element_line(colour = "black"))+
theme(axis.text= element_text(colour = "black"))+
theme(legend.position="none")
tadacc6 %>%
group_by(target_sal, eggsal, loc) %>%
summarize(mean(predicted,na.rm = TRUE))
survdat2$eggsal = as.factor(survdat2$eggsal)
survdat2$eggsal = as.factor(survdat2$eggsal)
survdat2$target_sal = as.factor(survdat2$target_sal)
survdat2$dead = 0
for(i in 1:nrow(survdat2)){ #Create binary column - 1 = alive at MM, 0 = dead at MM
if (survdat2$alive[i] == "1"){survdat2$dead[i] = 0}
else (survdat2$dead[i] = 1)
}
# Kaplan-Meier Survival Estimates
surv1 <- survfit(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2)
sumdat = surv_summary(surv1)
sumdat$eggloc = paste(sumdat$eggsal,sumdat$loc,sep="_")
#Cox Regression (nonparametric hazard estimation)
cx1 <- coxph(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2)
summary(cx1)
# Kaplan-Meier Survival Estimates
surv1 <- survfit(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2)
sumdat = surv_summary(surv1)
survdat2$eggsal = as.factor(survdat2$eggsal)
survdat2$target_sal = as.factor(survdat2$target_sal)
survdat2$dead = 0
for(i in 1:nrow(survdat2)){ #Create binary column - 1 = alive at MM, 0 = dead at MM
if (survdat2$alive[i] == "1"){survdat2$dead[i] = 0}
else (survdat2$dead[i] = 1)
}
survdat2
t
# Kaplan-Meier Survival Estimates
surv1 <- survfit(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2)
summary(surv1)
anova(c1,c2,test="Chisq") # Yes, significant interaction
c1 = glmer(prop.surv ~ eggsal * loc * target_sal + (1|pop), # Changed optimizer to improve model convergence
data=tadacc6, family = binomial(), weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c2 = glmer(prop.surv ~ eggsal + loc + target_sal + (1|pop),
data=tadacc6, family = binomial(), weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c3 = glmer(prop.surv ~ 1 * loc * target_sal + (1|pop),
data=tadacc6, family = binomial(),  weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c4 = glmer(prop.surv ~ eggsal * 1 * target_sal + (1|pop),
data=tadacc6, family = binomial(),  weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c5 = glmer(prop.surv ~ eggsal * loc * 1 + (1|pop),
data=tadacc6, family = binomial(),  weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
ICtab(c1,c2,c3,c4,c5,weights = TRUE)
??ICtab
require(bblme)
require(bbmle)
ICtab(c1,c2,c3,c4,c5,weights = TRUE)
c3 = glmer(prop.surv ~ 1 * loc * target_sal + (1|pop),
data=tadacc6, family = binomial(),  weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c4 = glmer(prop.surv ~ eggsal * 1 * target_sal + (1|pop),
data=tadacc6, family = binomial(),  weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c5 = glmer(prop.surv ~ eggsal * loc * 1 + (1|pop),
data=tadacc6, family = binomial(),  weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
anova(c1,c2,test="Chisq") # Yes, significant interaction
anova(c1,c3,test="Chisq") # Significant impact of egg salinity
anova(c1,c3,test="Chisq") # Significant impact of egg salinity
anova(c1,c4,test="Chisq") # Significant impact of location
emmeans(c1)
require(emmeans)
install.packages("emmeans")
require(emmeans)
emmeans(c1)
emmeans(c1,loc_go)
emmeans(c1,loc)
c1
coef(pairs(c1))
c1 = glmer(prop.surv ~ eggsal * loc * target_sal + (1|pop), # Changed optimizer to improve model convergence
data=tadacc6, family = binomial(), weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
coef(pairs(c1))
coef(c1)
plot(coef(c1))
emmeans(c1, loc*target_sal*eggsal, type = "lp")
pairs(c1, type = "response")
emmeans(c1, "loc")
emmeans(c1, "loc*eggsal*target_sal")
as.data.frame(emmeans(c1, ~ loc*eggsal*target_sal))
c1.next = emmeans(c1, ~ loc*eggsal*target_sal)
pairs(c1.next)
View(pairs(c1.next))
pp= pairs(c1.next)
View(pp)
pp
pairs(c1.next)@grid
pairs(c1.next)@linfct
pairs(c1.next)
getOption("max.print")
pairs(c1)
pairs(c1.next)
survdat2$eggsal = as.factor(survdat2$eggsal)
survdat2$target_sal = as.factor(survdat2$target_sal)
survdat2$dead = 0
for(i in 1:nrow(survdat2)){ #Create binary column - 1 = alive at MM, 0 = dead at MM
if (survdat2$alive[i] == "1"){survdat2$dead[i] = 0}
else (survdat2$dead[i] = 1)
}
# Kaplan-Meier Survival Estimates
surv1 <- survfit(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2)
sumdat = surv_summary(surv1)
sumdat$eggloc = paste(sumdat$eggsal,sumdat$loc,sep="_")
sumdat
sumdat = surv_summary(surv1)
sumdat
plot(survfit(Surv(Surv(day,dead), eggsal) ~ 1, data = survdat2),
)
summary(survfit(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2))
#Cox Regression (nonparametric hazard estimation)
cx1 <- coxph(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2))
summary(cx1)
ggsurvplot(
fit = survfit(Surv(day,dead) ~ 1, data = survdat2),
xlab = "Days",
ylab = "Overall survival probability")
ggsurvplot(
fit = survfit(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2),
xlab = "Days",
ylab = "Overall survival probability")
names(tadacc6)
c1 = glmer(prop.surv ~ day* eggsal * loc * target_sal + (1|pop), # Changed optimizer to improve model convergence
data=tadacc6, family = binomial(), weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c2 = glmer(prop.surv ~ day + eggsal + loc + target_sal + (1|pop),
data=tadacc6, family = binomial(), weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c2
profile(c1)
summary(survfit(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2))
surv1$chisq
surv2 <- survdiff(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2)
surv2$chisq
surv2$n
length(surv2$n)
1 - pchisq(surv2$chisq, length(surv2$n) - 1)
devtools::install_github("zabore/ezfun")
require(ezfun)
ezfun::sdp(surv2)
surv2
summary(surv2)
summary(survdiff(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2))
summary(survdiff(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2)
summary(survfit(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2))
sumdat = surv_summary(surv1)
sumdat$eggloc = paste(sumdat$eggsal,sumdat$loc,sep="_")
#Cox Regression (nonparametric hazard estimation)
cx1 <- coxph(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2))
surv2 <- survdiff(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2)
surv2
sumdat = surv_summary(surv1)
sumdat
sumdat = surv_summary(surv1)
surv2 <- survdiff(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2)
summary(survfit(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2))
summary(survfit(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2))
1 - pchisq(surv2$chisq, length(surv2$n) - 1)
KP_sigval
KP_sigval <- ezfun::sdp(surv2) #Pulls out overall significance
KP_sigval
length(surv2$n) - 1
surv2$chisq
#Cox Regression (nonparametric hazard estimation)
cx1 <- coxph(Surv(day,dead) ~ eggsal + loc + target_sal, data = survdat2))
summary(cx1)
1.257-1.0966
1.441-1.27
tadphysio$EggEnv. = factor(tadphysio$EggEnv)
d1 = lmer(log(Length) ~ EggEnv. * TadEnv * Loc + (1|Cup) + (1|Pop), data = tadphysio, na.action="na.exclude")
d2 = lmer(log(Length) ~ EggEnv. + TadEnv + Loc + (1|Cup) + (1|Pop), data = tadphysio, na.action="na.exclude")
d3 = lmer(log(Length) ~ 1 + TadEnv + Loc + (1|Cup) + (1|Pop), data = tadphysio, na.action="na.exclude")
d4 = lmer(log(Length) ~ EggEnv. + TadEnv + 1 + (1|Cup) + (1|Pop), data = tadphysio, na.action="na.exclude")
d5 = lmer(log(Length) ~ EggEnv. + 1 + Loc + (1|Cup) + (1|Pop), data = tadphysio, na.action="na.exclude")
anova(d1,d2) # No interaction
anova(d2,d3) # No Effect of Embryonic Salinity
anova(d2,d4) # Marginal effect of location (p = 0.06)
anova(d2,d5) # Effect of tadpole environment
# Plot (Figure 3a)
tadphysio$predicted = exp(predict(d2))
tadphysio$eggloc = paste(tadphysio$EggEnv,tadphysio$Loc, sep="_")
tadphysio$eggpop = paste(tadphysio$EggEnv,tadphysio$Pop, sep="_")
ggplot(tadphysio,aes(x=factor(TadEnv), y=Length, group= factor(eggloc)))+
xlab("Target Salinity of Tadpole Environment (ppt)") +
ylab("Total Length (mm)") +
geom_jitter(aes(shape = eggpop, colour=Loc), size = 1, width = 0.25)+
geom_smooth(aes(y = predicted, fill= Loc,colour = Loc, linetype = eggloc), se = TRUE)+
scale_fill_manual(values = col.loc_cap) +
scale_colour_manual(values = col.loc_cap) +
scale_shape_manual(values = eggpop_shape) +
scale_linetype_manual(values = line_type_cap)+
theme_hc(base_size = 24, base_family = "Times")+
theme(axis.line = element_line(colour = "black"))+
theme(axis.text= element_text(colour = "black"))+
theme(legend.position="none")
# I had an issue with osmometer calibration, so I excluded populations that are unreliable
goodpops = c("BOD","CSI","LH","PWL","WHF")
tadphysio1 = filter(tadphysio, Pop %in% goodpops) %>%
droplevels()
tadphysio1$EggEnv = as.factor(tadphysio1$EggEnv)
f1 = glmer(Osmo ~ EggEnv * TadEnv * Loc + (1|Pop) + (1|Cup), data = tadphysio1, family = poisson(),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000),tol=0.001), na.action="na.exclude") # Difficulty converging
f2 = glmer(Osmo ~ EggEnv + TadEnv + Loc + (1|Pop) + (1|Cup), data = tadphysio1, family = poisson(), na.action="na.exclude")
f3 = glmer(Osmo ~ EggEnv + TadEnv + 1 + (1|Pop) + (1|Cup), data = tadphysio1, family = poisson(),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000),tol=0.001), na.action="na.exclude")
f4 = glmer(Osmo ~ TadEnv + 1 + Loc + (1|Pop) + (1|Cup), data = tadphysio1, family = poisson(), na.action="na.exclude")
f5 = glmer(Osmo ~ EggEnv + 1 + Loc + (1|Pop) + (1|Cup), data = tadphysio1, family = poisson(), na.action="na.exclude")
anova(f1,f2) # No significant interaction
anova(f2,f3) # Location effect
anova(f2,f4) # Marginal egg environment effect (p = 0.09)
anova(f2,f5) # Effect of tadpole salinity (p > 0.01)
# Plot (Figure 3b)
tadphysio1$predicted = exp(predict(f2))
tadphysio1$eggloc = paste(tadphysio1$EggEnv,tadphysio1$Loc, sep="_")
tadphysio1$eggpop = paste(tadphysio1$EggEnv,tadphysio1$Pop, sep="_")
ggplot(tadphysio1,aes(x=factor(TadEnv), y=Osmo, group= factor(eggloc)))+
xlab("Salinity of Tadpole Environment (ppt)") +
ylab("Plasma Osmolality (mOsm/L)") +
geom_jitter(aes(shape = eggpop, colour=Loc), size = 1, width = 0.25)+
geom_smooth(aes(y = predicted, fill= Loc,colour = Loc, linetype = eggloc), se = TRUE)+
scale_fill_manual(values = col.loc_cap) +
scale_colour_manual(values = col.loc_cap) +
scale_shape_manual(values = eggpop_shape) +
scale_linetype_manual(values = line_type_cap)+
theme_hc(base_size = 24, base_family = "Times")+
theme(axis.line = element_line(colour = "black"))+
theme(axis.text= element_text(colour = "black"))+
theme(legend.position="none")
# Establish the pathway to pull from
base_dir <- "~/Desktop/Work/DataSets/Saltomics"
hatch$prop.hatch = hatch$Hatched/hatch$Eggs # Divide the number hatched by total laid in clutch
# How does salinity and location affect the proportion of eggs that hatch?
b1 = glmer(prop.hatch ~ factor(Egg_env) * Loc * (1|Pop), weights = Eggs, data = hatch, family = binomial(), na.action="na.exclude")
b2 = glmer(prop.hatch ~ factor(Egg_env) + Loc + (1|Pop),  weights = Eggs, data = hatch, family = binomial(), na.action="na.exclude")
b3 = glmer(prop.hatch ~ 1 * Loc + (1|Pop),  weights = Eggs, data = hatch, family = binomial(), na.action="na.exclude")
b4 = glmer(prop.hatch ~ factor(Egg_env) * 1 + (1|Pop), weights = Eggs, data = hatch, family = binomial(), na.action="na.exclude")
anova(b1,b2) # Significant interaction with salinity and location
anova(a2,a3) # Yes, differences according to age
anova(a2,a3) # Yes, differences according to age
anova(a2,a4) # No difference according to salinity
anova(a2,a5) # No differences according to location
a2. <- lmer(log(stage) ~ Age_adj + 1 + 1 + (1|Pop), data = egg1)
anova(a2.,a2) # Additive model is best
a2. <- lmer(log(stage) ~ Age_adj +(1|Pop), data = egg1)
anova(a2.,a2) # Additive model is best
anova(a1,a2.) # Additive model is best
anova(a2.,a2) # Additive model is best
anova(a2,a6) # N
a6 <- lmer(log(stage) ~ Age_adj + (1|Pop), data = egg1)
anova(a2,a6) # N
anova(a2,a4) # No difference according to salinity
anova(a2,a5) # No differences according to location
anova(a2,a4) # No difference according to salinity
# Plot (not included in paper)
ggplot(egg1,aes(x=Age_adj, y=stage, group= factor(Loc), colour =factor(Loc)))+
xlab("Age (hr)") +
ylab("Gosner Stage") +
geom_point()+
stat_summary(position = position_dodge(0.3), geom = "line")+
scale_fill_manual(values = cols1) +
scale_colour_manual(values = cols1) +
theme_hc(base_size = 24, base_family = "Times")+
theme(axis.line = element_line(colour = "black"))+
theme(axis.text= element_text(colour = "black")) +
theme(legend.position="none")
hatch$prop.hatch = hatch$Hatched/hatch$Eggs # Divide the number hatched by total laid in clutch
# How does salinity and location affect the proportion of eggs that hatch?
b1 = glmer(prop.hatch ~ factor(Egg_env) * Loc * (1|Pop), weights = Eggs, data = hatch, family = binomial(), na.action="na.exclude")
b2 = glmer(prop.hatch ~ factor(Egg_env) + Loc + (1|Pop),  weights = Eggs, data = hatch, family = binomial(), na.action="na.exclude")
b3 = glmer(prop.hatch ~ 1 * Loc + (1|Pop),  weights = Eggs, data = hatch, family = binomial(), na.action="na.exclude")
b4 = glmer(prop.hatch ~ factor(Egg_env) * 1 + (1|Pop), weights = Eggs, data = hatch, family = binomial(), na.action="na.exclude")
anova(b1,b2) # Significant interaction with salinity and location
# Plot (Figure 2a)
hatch$predicted = plogis(predict(b1))
hatch$eggloc = paste(hatch$Egg_env,hatch$Loc, sep="_")
hatch$eggpop = paste(hatch$Egg_env,hatch$Pop, sep="_")
ggplot(hatch,aes(x=Egg_env, y=prop.hatch, group= factor(eggloc)))+
xlab("Salinity of Embryonic Environment (ppt)") +
ylab("Proportion Embryos Hatched") +
geom_boxplot(aes(fill=Loc),alpha = 0.4)+
geom_jitter(aes(shape = Loc, fill = Loc),size = 4,  width = 0.35)+
scale_fill_manual(values = col.loc) +
scale_colour_manual(values = col.loc) +
scale_shape_manual(values = loc_shapes) +
theme_hc(base_size = 24, base_family = "Times")+
theme(axis.line = element_line(colour = "black"))+
theme(axis.text= element_text(colour = "black"))+
theme(legend.position="none")
hatch %>% # To get effect size estimates
group_by(Egg_env, Loc) %>%
summarize(mean(predicted,na.rm = TRUE))
ggplot(hatch,aes(x=Egg_env, y=prop.hatch, group= factor(eggloc)))+
xlab("Salinity of Embryonic Environment (ppt)") +
ylab("Proportion Embryos Hatched") +
geom_boxplot(aes(fill=Loc),alpha = 0.4)+
geom_jitter(aes(shape = Loc, fill = Loc),size = 4,  width = 0.35)+
scale_fill_manual(values = col.loc) +
scale_colour_manual(values = col.loc) +
scale_shape_manual(values = loc_shapes) +
theme_hc(base_size = 24, base_family = "Times")+
theme(axis.line = element_line(colour = "black"))+
theme(axis.text= element_text(colour = "black"))+
theme(legend.position="none")
# Data wrangling
tadacc = tadacc1[-c(475:480),] #removes suspicious outlier inland clutch (uncertain of cause)
tadacc$eggsal = as.factor(tadacc$eggsal)
tadacc$target_sal = as.factor(tadacc$target_sal)
tadacc$prop.surv = (tadacc$survive/50) # Divides number in cup by starting density of 50 tads
tadacc6 = filter(tadacc, day == "6")
tadacc6$weight = rep(50, nrow(tadacc6))
c1 = glmer(prop.surv ~ day * eggsal * loc * target_sal + (1|pop), # Changed optimizer to improve model convergence
data=tadacc6, family = binomial(), weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c2 = glmer(prop.surv ~ day + eggsal + loc + target_sal + (1|pop),
data=tadacc6, family = binomial(), weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c1 = glmer(prop.surv ~ eggsal * loc * target_sal + (1|pop), # Changed optimizer to improve model convergence
data=tadacc6, family = binomial(), weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c2 = glmer(prop.surv ~ eggsal + loc + target_sal + (1|pop),
data=tadacc6, family = binomial(), weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c3 = glmer(prop.surv ~ 1 * loc * target_sal + (1|pop),
data=tadacc6, family = binomial(),  weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c4 = glmer(prop.surv ~ eggsal * 1 * target_sal + (1|pop),
data=tadacc6, family = binomial(),  weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
c5 = glmer(prop.surv ~ eggsal * loc * 1 + (1|pop),
data=tadacc6, family = binomial(),  weights = weight, glmerControl(optimizer = "bobyqa"),na.action="na.exclude")
anova(c1,c2,test="Chisq") # Yes, significant interaction
anova(c1,c3,test="Chisq") # Significant impact of egg salinity
anova(c1,c2,test="Chisq") # Yes, significant interaction
anova(c1,c2,test="Chisq") # Yes, significant interaction
# Plot (Figure 2b)
tadacc6$predicted = plogis(predict(c1))
tadacc6$eggloc = paste(tadacc6$eggsal,tadacc6$loc, sep="_")
tadacc6$eggpop = paste(tadacc6$eggsal,tadacc6$pop, sep="_")
ggplot(tadacc6,aes(x=factor(target_sal), y=prop.surv, group= factor(eggloc)))+
xlab("Target Salinity of Tadpole Environment (ppt)") +
ylab("Proportion Survived") +
geom_smooth(aes(y = predicted, colour = loc, linetype = eggloc), se = FALSE)+
geom_jitter(aes(shape = eggpop,colour=loc, size = 2),width = 0.25)+
#stat_summary(position = position_dodge(0.35),size=1.5)+
scale_fill_manual(values = col.loc) +
scale_colour_manual(values = col.loc) +
scale_shape_manual(values = eggpop_shape) +
scale_linetype_manual(values = line_type)+
theme_hc(base_size = 24, base_family = "Times")+
theme(axis.line = element_line(colour = "black"))+
theme(axis.text= element_text(colour = "black"))+
theme(legend.position="none")
tadacc6 %>% # To get effect size estimates
group_by(target_sal, eggsal, loc) %>%
summarize(mean(predicted,na.rm = TRUE))
tadphysio$EggEnv. = factor(tadphysio$EggEnv)
d1 = lmer(log(Length) ~ EggEnv. * TadEnv * Loc + (1|Cup) + (1|Pop), data = tadphysio, na.action="na.exclude")
d2 = lmer(log(Length) ~ EggEnv. + TadEnv + Loc + (1|Cup) + (1|Pop), data = tadphysio, na.action="na.exclude")
d3 = lmer(log(Length) ~ 1 + TadEnv + Loc + (1|Cup) + (1|Pop), data = tadphysio, na.action="na.exclude")
d4 = lmer(log(Length) ~ EggEnv. + TadEnv + 1 + (1|Cup) + (1|Pop), data = tadphysio, na.action="na.exclude")
d5 = lmer(log(Length) ~ EggEnv. + 1 + Loc + (1|Cup) + (1|Pop), data = tadphysio, na.action="na.exclude")
anova(d1,d2) # No interaction
anova(d1,d2) # No interaction
anova(d2,d3) # No Effect of Embryonic Salinity
anova(d2,d4) # Marginal effect of location (p = 0.06)
anova(d2,d5) # Effect of tadpole environment
# I had an issue with osmometer calibration, so I excluded populations that are unreliable
goodpops = c("BOD","CSI","LH","PWL","WHF")
tadphysio1 = filter(tadphysio, Pop %in% goodpops) %>%
droplevels()
tadphysio1$EggEnv = as.factor(tadphysio1$EggEnv)
f1 = glmer(Osmo ~ EggEnv * TadEnv * Loc + (1|Pop) + (1|Cup), data = tadphysio1, family = poisson(),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000),tol=0.001), na.action="na.exclude") # Difficulty converging
f2 = glmer(Osmo ~ EggEnv + TadEnv + Loc + (1|Pop) + (1|Cup), data = tadphysio1, family = poisson(), na.action="na.exclude")
f3 = glmer(Osmo ~ EggEnv + TadEnv + 1 + (1|Pop) + (1|Cup), data = tadphysio1, family = poisson(),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000),tol=0.001), na.action="na.exclude")
f4 = glmer(Osmo ~ TadEnv + 1 + Loc + (1|Pop) + (1|Cup), data = tadphysio1, family = poisson(), na.action="na.exclude")
f5 = glmer(Osmo ~ EggEnv + 1 + Loc + (1|Pop) + (1|Cup), data = tadphysio1, family = poisson(), na.action="na.exclude")
anova(f1,f2) # No significant interaction
anova(f2,f3) # Location effect
anova(f2,f5) # Effect of tadpole salinity (p > 0.01)
anova(f2,f4) # Marginal egg environment effect (p = 0.09)
# Summarize for effect size estimates
(effect = tadphysio1 %>%
group_by(EggEnv, TadEnv,Loc) %>%
summarize("mean" = mean(predicted, na.rm = TRUE)))
# Plot (Figure 3b)
tadphysio1$predicted = exp(predict(f2))
tadphysio1$eggloc = paste(tadphysio1$EggEnv,tadphysio1$Loc, sep="_")
tadphysio1$eggpop = paste(tadphysio1$EggEnv,tadphysio1$Pop, sep="_")
tadphysio1$predicted
# Summarize for effect size estimates
(effect = tadphysio1 %>%
group_by(EggEnv, TadEnv,Loc) %>%
summarize("mean" = mean(predicted, na.rm = TRUE)))
# Summarize for effect size estimates
(effect = tadphysio1 %>%
group_by(Loc) %>%
summarize("mean" = mean(predicted, na.rm = TRUE)))
339/324
324/339
# Summarize for effect size estimates
(effect = tadphysio1 %>%
group_by(EggEnv,Loc) %>%
summarize("mean" = mean(predicted, na.rm = TRUE)))
# Summarize for effect size estimates
(effect = tadphysio1 %>%
group_by(EggEnv, TadEnv,Loc) %>%
summarize("mean" = mean(predicted, na.rm = TRUE)))
275/465
## Launch PCA Explorer
pcaExplorer(dds = dds_pca, rl_loc) #Will launch app
pcaData <- plotPCA(rl_loc, intgroup = c("location","egg","tad"), returnData = TRUE)
pcaData$Population <- so_anno$population[match(pcaData$name,so_anno$sample.)]
percentVar <- round(100 * attr(pcaData, "percentVar"),digits=2)
## Plot Specs
pcaData$group = paste(pcaData$egg, pcaData$tad, pcaData$location,sep=":")
pcaData$trt = paste(pcaData$egg, pcaData$tad, sep = "_")
# Plot PCA (Figure 4)
ggplot(pcaData, aes(x = PC1, y = PC2, shape = Population)) +
geom_point(aes(fill = location),size = 4) +
stat_ellipse(aes(group = location, colour = location),size = 1,alpha = 1)+
xlab(paste0("PC1: ", percentVar[1], "% variance")) +
ylab(paste0("PC2: ", percentVar[2], "% variance")) +
scale_colour_manual(name = "Location",values = PCAcols)+
#scale_linetype_manual(name = "Salinity Exposure",
#                      labels = c("0ppt egg: 0ppt tad","0ppt egg: 6ppt tad","4ppt egg: 4ppt tad", "4ppt egg: 6ppt tad"),
#                      values = trt_lines)+
scale_fill_manual(values= PCAcols)+ guides(fill = FALSE) +
scale_shape_manual(values = pop_shapes,
labels = c("Inland 1 (BL)", "Coastal 1 (BOD)", "Coastal 2 (CSI)","Coastal 3 (DQ)","Coastal 4 (LH)","Inland 2 (LO)","Inland 3 (PWL)","Inland 4 (WHF)")) + #guides(shape = FALSE) +
theme_bw(base_size = 24, base_family = "Times")+
theme(axis.text.x = element_text(size=20,colour = "black",angle = 45, hjust=1),
axis.title.x = element_text(size=24,face="bold")) +
theme(axis.text.y = element_text(size=20,colour = "black"),
axis.title.y = element_text(size=24,face="bold")) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(size = 2)) + theme(legend.position="none")
