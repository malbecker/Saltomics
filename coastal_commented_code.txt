#!/bin/bash

# coastal Hyla cinerea transcriptome assembly and downstream bash work
# start in molly/coastal folder

# first, concatenate reads by coastal treatment (0-0, 0-4, 4-4, 4-6)
for i in reads/0_0_*R1_001.fastq; do cat $i; echo; done > coastal.zerozero.R1.fastq &
for f in reads/0_0_*R2_001.fastq; do cat $f; echo; done > coastal.zerozero.R2.fastq &


for g in reads/0_6_*R1_001.fastq; do cat $g; echo; done > coastal.zerosix.R1.fastq &
for h in reads/0_6_*R2_001.fastq; do cat $h; echo; done > coastal.zerosix.R2.fastq &


for l in reads/4_4_*R1_001.fastq; do cat $l; echo; done > coastal.fourfour.R1.fastq &
for m in reads/4_4_*R2_001.fastq; do cat $m; echo; done > coastal.fourfour.R2.fastq &


for n in reads/4_6_*R1_001.fastq; do cat $n; echo; done > coastal.foursix.R1.fastq &
for o in reads/4_6_*R2_001.fastq; do cat $o; echo; done > coastal.foursix.R2.fastq 

wait

## is it done? check with jobs. if any say running, watch a star war

# subsample each treatment to equal coverage. since there are 4 treatments, we are sampling each *treatment group* to 12.5M reads, and then running a transcriptome assembly on the concatenated dataset of 50M reads
seqtk sample -s100 coastal.zerozero.R1.fastq 12500000 > subsamp.coastal.zerozero.R1.fastq &
seqtk sample -s100 coastal.zerozero.R2.fastq 12500000 > subsamp.coastal.zerozero.R2.fastq &

seqtk sample -s100 coastal.zerosix.R1.fastq 12500000 > subsamp.coastal.zerosix.R1.fastq &
seqtk sample -s100 coastal.zerosix.R2.fastq 12500000 > subsamp.coastal.zerosix.R2.fastq &

seqtk sample -s100 coastal.fourfour.R1.fastq 12500000 > subsamp.coastal.fourfour.R1.fastq &
seqtk sample -s100 coastal.fourfour.R2.fastq 12500000 > subsamp.coastal.fourfour.R2.fastq &

seqtk sample -s100 coastal.foursix.R1.fastq 12500000 > subsamp.coastal.foursix.R1.fastq &
seqtk sample -s100 coastal.foursix.R2.fastq 12500000 > subsamp.coastal.foursix.R2.fastq 

wait

# concatenate forward and reverse reads, each should be a little over 50 million reads

for i in subsamp.coastal*R1.fastq; do cat $i; echo; done > subsamp.coastal.R1.fastq 
for f in subsamp.coastal*R2.fastq; do cat $f; echo; done > subsamp.coastal.R2.fastq


# Reads managed. Run the Oyster River Protocol to build an imitator tadpole gut transcriptome
/home/summersk/programs/Oyster_River_Protocol/oyster35_55.mk main \
MEM=650 \
CPU=26 \
READ1=subsamp.coastal.R1.fastq \
READ2=subsamp.coastal.R2.fastq \
RUNOUT=coastalsubsamp

# delete intermediate files
rm coastal.zero* coastal.four* subsamp.coastal.zero* subsamp.coastal.four*

### Trim and clean sample reads

# Remove adaptors and trim the reads from each sample, first get the samples
samples=$(ls reads/*fastq | sed "s/R1_001.fastq//g" | sed "s/R2_001.fastq//g" | uniq)

# Run trimmomatic
cd reads/
(ls *fastq | sed "s/_R1_001.fastq//g" | sed "s/_R2_001.fastq//g") | \
parallel -j 5 trimmomatic-0.36.jar PE -threads 4 \
-baseout /home/summersk/molly/coastal/rcorr/{}.TRIM.fastq {}_R1_001.fastq {}_R2_001.fastq \
LEADING:3 TRAILING:3 ILLUMINACLIP:barcodes.fa:2:30:10 MINLEN:25 

# R corrector  
cd ..
(ls rcorr/*P.fastq | sed "s/.TRIM_1P.fastq//g" | sed "s/.TRIM_2P.fastq//g"  | uniq) | \
parallel -j 6 run_rcorrector.pl -t 4 -k 31 -1 {}.TRIM_1P.fastq -2 {}.TRIM_2P.fastq -od rcorr

# concatenate all the cleaned coastal reads

for i in rcorr/*1P.cor.fq; do cat $i; echo; done > cleaned.coastal.1P.fastq
for i in rcorr/*2P.cor.fq; do cat $i; echo; done > cleaned.coastal.2P.fastq

# Done with coastal assembly; move on to merge the coastal and inland assemblies